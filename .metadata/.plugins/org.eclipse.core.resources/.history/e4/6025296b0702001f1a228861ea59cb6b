package com.ezen.test.controller;


import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.ezen.test.domain.BoardVO;
import com.ezen.test.service.BoardService;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@RequiredArgsConstructor
@Controller
@RequestMapping("/board/*")
@Slf4j
public class BoardController {
    private final BoardService bsv;

    @GetMapping("/register")
    public void register() {} // 이렇게 해도됨
	/*
	 * public String register() { return "/board/register"; }
	 */
    @PostMapping("/insert")
    public String insert(BoardVO bvo) {
        log.info(">>>> bvo >> {}", bvo);

        int isOk = bsv.insert(bvo);
        return "index";
    }
    @GetMapping("/list")
    public String list(Model m) {
    	// 리턴타입은 목적지 경로에 대한 타입(destPage가 리턴)
    	// Model 객체 => request.setAttribute 역할을 하는 객체
    	List<BoardVO> list = bsv.getList();
    	m.addAttribute("list", list);
    	return "/board/list";
    }
    
    //detail => /board/detail = > return /board/detail
    //modify => /board/modify = > return /board/modify
    // controller로 들어오는 경로와 jsp로 나가는 경로가 일치하면 void 처리 할 수 있음
    @GetMapping({"/detail","/modify"})
    public void detail(Model m, @RequestParam("bno")int bno) {
    	log.info(">>>> bvo >> {}", bno);
    	BoardVO bvo = bsv.getDetail(bno);
    	m.addAttribute("bvo", bvo);
    	
    }
    @PostMapping("modify")
    public String modify(BoardVO bvo) {
    	log.info(">>>> modify bvo >> {}", bvo);
    	bsv.update(bvo);
    	// /board/detail.jsp : 새로운 데이터를 가지고 가야 함. param이 필요함
    	
    	return "redirect:/board/detail?bno="+bvo.getBno();
    }
    
    public String remove(BoardVO bvo) {
    	log.info(">>>> remove bvo >> {}", bvo);
    	bsv.remove(bvo);
    	return "redirect:/board/list?bno="+bvo.getBno();
    }
    
    
}

